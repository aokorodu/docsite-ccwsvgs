$exampleDuration: 3s;

.circle {
  fill: orange;
  stroke: black;
  stroke-width: 1;
  transition-property: stroke-width fill;
  transition-duration: 0.33s;
  transition-timing-function: linear;
  transition-delay: 0;
}

.circle:hover {
  stroke-width: 10;
  fill: red;
}

.strokeDash {
  fill: "orange";
  stroke: black;
  stroke-width: 5;
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  stroke-linecap: none;
}

.strokeDashHover {
  fill: "orange";
  stroke: black;
  stroke-width: 5;
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  stroke-linecap: none;
  transition-property: stroke-dashoffset;
  transition-duration: 0.33s;
  transition-timing-function: linear;
  transition-delay: 0;
}

.strokeDashHover:hover {
  stroke-dashoffset: 0;
}

// .letter {
//   stroke: white;
//   stroke-width: 1;
//   stroke-dasharray: 100;
//   stroke-dashoffset: 100;
//   stroke-linecap: none;
//   transition-property: stroke-dashoffset;
//   transition-duration: 3s;
//   transition-timing-function: linear;
//   transition-delay: 0;
// }

// .letter:hover {
//   stroke-width: 1;
//   stroke-dasharray: 100;
//   stroke-dashoffset: 0;
//   stroke-linecap: none;
// }

@mixin letter {
  stroke: white;
  fill: #ff0000;
  fill-opacity: 0;
  stroke-width: 0;
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  transition-property: stroke-dashoffset, fill-opacity, stroke-width;
  transition-duration: 1s;
  transition-timing-function: ease-in-out;
}

@mixin letterDrawn {
  fill-opacity: 1;
  stroke-width: 5;
  stroke-dashoffset: 0;
}

.s {
  @include letter();
  transition-delay: 0;
}

.v {
  @include letter();
  transition-delay: 0.5s;
}

.g {
  @include letter();
  transition-delay: 1s;
}

.letter:hover > :is(.s, .v, .g) {
  @include letterDrawn();
}

.geoPropAnimation {
  cx: 250px;
  cy: 250px;
  r: 150px;
  transition-property: all;
  transition-duration: 0.33s;
}
.geoPropAnimation:hover {
  r: 200px;
  cy: 225px;
}

@keyframes zoom {
  0% {
    fill: red;
    cx: 250px;
    cy: 125px;
  }
  33% {
    cx: 375px;
    cy: 375px;
  }
  66% {
    cx: 125px;
    cy: 375px;
  }
  100% {
    fill: blue;
    cx: 250px;
    cy: 125px;
  }
}

.zoomCircle {
  cx: 250px;
  cy: 125px;
  animation-name: zoom;
  animation-duration: 5s;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-direction: alternate-reverse;
}

.balloon {
  animation-name: float;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  animation-direction: alternate;
}

.balloonEase {
  animation-name: float;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
}

.clouds {
  animation-name: stream;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

@keyframes stream {
  from {
    transform: translateX(0px);
  }

  to {
    transform: translate(-500px);
  }
}

@keyframes float {
  from {
    transform: translate(175px, 200px) scale(2);
  }

  to {
    transform: translate(175px, 50px) scale(2);
  }
}

.exampleImage {
  width: 300px;
  height: 300px;
}

@keyframes backAndForth {
  0% {
    cy: 280;
  }

  100% {
    cy: 20;
  }
}

.exampleAnimation {
  animation-name: backAndForth;
  animation-duration: $exampleDuration;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
  animation-direction: alternate;
  animation-timing-function: linear;
}

.easeIn {
  animation-name: backAndForth;
  animation-duration: $exampleDuration;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
  animation-direction: alternate;
  animation-timing-function: ease-in;
}

.easeOut {
  animation-name: backAndForth;
  animation-duration: $exampleDuration;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
  animation-direction: alternate;
  animation-timing-function: ease-out;
}

.easeInOut {
  animation-name: backAndForth;
  animation-duration: $exampleDuration;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
  animation-direction: alternate;
  animation-timing-function: ease-in-out;
}

.easeLinear {
  animation-name: backAndForth;
  animation-duration: $exampleDuration;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
  animation-direction: alternate;
  animation-timing-function: linear;
}

.easeCustom {
  animation-name: backAndForth;
  animation-duration: $exampleDuration;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
  animation-direction: alternate;
  animation-timing-function: cubic-bezier(0.13, 0.74, 0, 1);
}

.letter {
}

.on {
  stroke-dashoffset: 0;
}

.off {
  stroke-dashoffset: -100;
}

@keyframes drawLetter {
  0% {
    stroke-dashoffset: -100;
  }

  100% {
    stroke-dashoffset: 0;
  }
}
